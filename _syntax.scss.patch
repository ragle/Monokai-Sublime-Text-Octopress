--- Desktop/_syntax.scss	2012-01-04 20:15:26.079026151 +0200
+++ Octopress/sass/partials/_syntax.scss	2012-01-04 20:08:20.087015242 +0200
@@ -4,17 +4,10 @@
     text-align: right;
     font-size: 13px;
     line-height: 1.45em;
-    @if $solarized == light {
-      background: lighten($base03, 1) $noise-bg !important;
-      border-right: 1px solid darken($base02, 2) !important;
-      @include box-shadow(lighten($base03, 2) -1px 0 inset);
-      text-shadow: lighten($base02, 2) 0 -1px;
-    } @else {
-      background: $base02 $noise-bg !important;
-      border-right: 1px solid darken($base03, 2) !important;
-      @include box-shadow(lighten($base02, 2) -1px 0 inset);
-      text-shadow: darken($base02, 10) 0 -1px;
-    }
+    background: $base02 $noise-bg !important;
+    border-right: 1px solid darken($base03, 2) !important;
+    @include box-shadow(lighten($base02, 2) -1px 0 inset);
+    text-shadow: darken($base02, 10) 0 -1px;
     span { color: $base01 !important; }
     padding: .8em !important;
     @include border-radius(0);
@@ -46,13 +39,8 @@
    border: 1px solid lighten($base02, 2) !important;
    color: $base01;
    font-size: .7em !important;
-   @if $solarized == light {
-     background: lighten($base03, 2) $noise-bg;
-     border: 1px solid $pre-border !important;
-     border-top: 1px solid lighten($base03, 2) !important;
-   } @else {
-     background: $base02 $noise-bg;
-   }
+   background: $base02 $noise-bg;
+   
    @extend .sans;
    line-height: 1.5em;
     a {
@@ -120,15 +108,17 @@
   span { color: $base1 !important; }
   span { font-style: normal !important; font-weight: normal !important; }
 
-  .c      { color: $base01 !important; font-style: italic !important; }                     /* Comment */
-  .cm     { color: $base01 !important; font-style: italic !important; }                     /* Comment.Multiline */
-  .cp     { color: $base01 !important; font-style: italic !important;  }                     /* Comment.Preproc */
-  .c1     { color: $base01 !important; font-style: italic !important; }                     /* Comment.Single */
-  .cs     { color: $base01 !important; font-weight: bold !important; font-style: italic !important; }   /* Comment.Special */
-  .err    { color: $solar-red !important; background: none !important; }                                            /* Error */
-  .k      { color: $solar-orange !important; }                       /* Keyword */
-  .o      { color: $base1 !important; font-weight: bold !important; }                       /* Operator */
-  .p      { color: $base1 !important; }                                             /* Operator */
+  .c      { color: $comment !important; font-style: italic !important; }                     /* Comment */
+  .cm     { color: $comment !important; font-style: italic !important; }                     /* Comment.Multiline */
+  .cp     { color: $comment !important; font-style: italic !important;  }                     /* Comment.Preproc */
+  .c1     { color: $comment !important; font-style: italic !important; }                     /* Comment.Single */
+  .cs     { color: $comment !important; font-weight: bold !important; font-style: italic !important; }   /* Comment.Special */
+
+  .err    { color: $err !important; background: $err_bg !important; }                                            /* Error */
+  .k      { color: $keyword !important; }                       /* Keyword */
+
+  .o      { color: $operator !important; font-weight: bold !important; }                       /* Operaitor */
+  .p      { color: $operator !important; }                                             /* Operator */
   .ow     { color: $solar-cyan !important; font-weight: bold !important; }                       /* Operator.Word */
   .gd     { color: $base1 !important; background-color: mix($solar-red, $base03, 25%) !important; display: inline-block; }               /* Generic.Deleted */
   .gd .x  { color: $base1 !important; background-color: mix($solar-red, $base03, 35%) !important; display: inline-block; }               /* Generic.Deleted.Specific */
@@ -142,40 +132,40 @@
   .gs     { color: $base1 !important; font-weight: bold !important; }                                       /* Generic.Strong */
   .gu     { color: $solar-violet !important; }                                          /* Generic.Subheading */
   //.gt     { color: #aa0000 }                                          /* Generic.Traceback */
-  .kc     { color: $solar-green !important; font-weight: bold !important; }                       /* Keyword.Constant */
+  .kc     { color: $constant !important; font-weight: bold !important; }                       /* Keyword.Constant */
   .kd     { color: $solar-blue !important; }                       /* Keyword.Declaration */
   .kp     { color: $solar-orange !important; font-weight: bold !important; }                       /* Keyword.Pseudo */
   .kr     { color: $solar-magenta !important; font-weight: bold !important; }                       /* Keyword.Reserved */
   .kt     { color: $solar-cyan !important; }                       /* Keyword.Type */
-  .n      { color: $solar-blue !important; }
-  .na     { color: $solar-blue !important; }                                          /* Name.Attribute */
+  .n      { color: $name !important; }
+  .na     { color: $name_attribute !important; }                                          /* Name.Attribute */
   .nb     { color: $solar-green !important; }                                          /* Name.Builtin */
-  .nc     { color: $solar-magenta !important;}                                                   /* Name.Class */
-  .no     { color: $solar-yellow !important; }                                          /* Name.Constant */
+  .nc     { color: $name_class !important;}                                                   /* Name.Class */
+  .no     { color: $name_constant !important; }                                          /* Name.Constant */
   //.ni     { color: #800080 }                                          /* Name.Entity */
   .nl     { color: $solar-green !important; }
-  .ne     { color: $solar-blue !important; font-weight: bold !important; }                       /* Name.Exception */
-  .nf     { color: $solar-blue !important; font-weight: bold !important; }                       /* Name.Function */
+  .ne     { color: $name_exception !important; font-weight: bold !important; }                       /* Name.Exception */
+  .nf     { color: $name_function !important; font-weight: bold !important; }                       /* Name.Function */
   .nn     { color: $solar-yellow !important; }                                          /* Name.Namespace */
-  .nt     { color: $solar-blue !important; font-weight: bold !important; }                                          /* Name.Tag */
-  .nx     { color: $solar-yellow !Important; }
+  .nt     { color: $name_tag !important; font-weight: bold !important; }                                          /* Name.Tag */
+  .nx     { color: $name_other !Important; }
   //.bp     { color: #999999 }                                          /* Name.Builtin.Pseudo */
   //.vc     { color: #008080 }                                          /* Name.Variable.Class */
   .vg     { color: $solar-blue !important; }                                          /* Name.Variable.Global */
   .vi     { color: $solar-blue !important; }                                          /* Name.Variable.Instance */
   .nv     { color: $solar-blue !important; }                                          /* Name.Variable */
   //.w      { color: #bbbbbb }                                          /* Text.Whitespace */
-  .mf     { color: $solar-cyan !important; }                                          /* Literal.Number.Float */
-  .m      { color: $solar-cyan !important; }                                          /* Literal.Number */
-  .mh     { color: $solar-cyan !important; }                                          /* Literal.Number.Hex */
-  .mi     { color: $solar-cyan !important; }                                          /* Literal.Number.Integer */
+  .mf     { color: $number !important; }                                          /* Literal.Number.Float */
+  .m      { color: $number !important; }                                          /* Literal.Number */
+  .mh     { color: $number !important; }                                          /* Literal.Number.Hex */
+  .mi     { color: $number !important; }                                          /* Literal.Number.Integer */
   //.mo     { color: #009999 }                                          /* Literal.Number.Oct */
-  .s      { color: $solar-cyan !important; }                                             /* Literal.String */
+  .s      { color: $string !important; }                                             /* Literal.String */
   //.sb     { color: #d14 }                                             /* Literal.String.Backtick */
   //.sc     { color: #d14 }                                             /* Literal.String.Char */
   .sd     { color: $solar-cyan !important; }                                             /* Literal.String.Doc */
   .s2     { color: $solar-cyan !important; }                                             /* Literal.String.Double */
-  .se     { color: $solar-red !important; }                                             /* Literal.String.Escape */
+  .se     { color: $string_escape !important; }                                             /* Literal.String.Escape */
   //.sh     { color: #d14 }                                             /* Literal.String.Heredoc */
   .si     { color: $solar-blue !important; }                                             /* Literal.String.Interpol */
   //.sx     { color: #d14 }                                             /* Literal.String.Other */
@@ -196,10 +186,6 @@
 
 $solar-scroll-bg: rgba(#fff, .15);
 $solar-scroll-thumb: rgba(#fff, .2);
-@if $solarized == light {
-  $solar-scroll-bg: rgba(#000, .15);
-  $solar-scroll-thumb: rgba(#000, .15);
-}
 
 pre, .highlight, .gist-highlight {
   &::-webkit-scrollbar {  height: .5em; background: $solar-scroll-bg; }
